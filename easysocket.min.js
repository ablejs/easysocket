"use strict";(function(w){var sw=function(conf){for(var k in conf){this.conf[k]=conf[k]}if("WebSocket"in w){console.log('您的浏览器支持WebSocket!')}else{console.log('您的浏览器不支持WebSocket!')}EasySocketConn=this;setInterval(this.sendHeart,this.conf.heartSleep*1000);return this};sw.prototype={version:'0.1',conf:{url:'',heart:'heart',heartSleep:60,reconn:true,eventKey:'cmd',debug:false},socket:null,createTime:0,reConnData:[],listener:{},ajaxQueue:{},event:{open:null,close:null},init:function(openFunc){this.event.open=openFunc;console.log('正在连接 '+this.conf.url);var ws=new WebSocket(this.conf.url);this.socket=ws;ws.onopen=this.onOpen;ws.onmessage=this.onMessage;ws.onclose=this.onClose},addListener:function(eventName,func){this.listener[eventName]=func},send:function(data,isReconn){if(typeof data=='object'){data=JSON.stringify(data)}if(isReconn){this.reConnData.push(data)}this.socket.send(data)},ajax:function(param,callBack){var sessId="Es"+(new Date()).valueOf()+String(Math.ceil(Math.random()*1000));var req={sessId:sessId,data:param.data};req[this.conf.eventKey]=param[this.conf.eventKey];this.send(req);this.ajaxQueue[sessId]=callBack;if(param.outtime){setTimeout(function(){var conn=EasySocketConn;if(conn.ajaxQueue[sessId]){conn.ajaxQueue[sessId](null,{code:1,msg:'Response timeout.'});delete conn.ajaxQueue[sessId]}},param.outtime*1000)}},sendHeart:function(){var conn=EasySocketConn;if(conn.socket!==null){if(typeof conn.conf.heart.data=='function'){conn.conf.heart.data=conn.conf.heart.data()}conn.send(conn.conf.heart)}},onOpen:function(){var conn=EasySocketConn;for(var k in conn.reConnData){conn.send(conn.reConnData[k])}if(typeof conn.event.open=='function'){conn.event.open();conn.event.open=null}},onMessage:function(evt){var conn=EasySocketConn;var data=conn.deJson(evt.data);if(data===false){if(conn.conf.debug)console.log("未解析的数据："+evt.data);return}if(data.sessId&&conn.ajaxQueue[data.sessId]){conn.ajaxQueue[data.sessId](data);delete conn.ajaxQueue[data.sessId];return}if(data[conn.conf.eventKey]&&conn.listener[data[conn.conf.eventKey]]){conn.listener[data[conn.conf.eventKey]](data)}},onClose:function(){var conn=EasySocketConn;conn.socket=null;if(typeof conn.event.close=='function'){conn.event.close()}if(conn.conf.reconn){if(conn.conf.debug)console.log("连接断开，正在重连...");setTimeout(conn.init(),1000)}},deJson:function(str){if(typeof str=='string'){try{var obj=JSON.parse(str);if(typeof obj=='object'&&obj){return obj}}catch(e){return false}}return false}};w.EasySocket=sw;w.EasySocketConn=null})(window);